using Arctic.API;
using Arctic.Settings;
using MelonLoader;
using Newtonsoft.Json;
using System;
using System.Collections;
using System.Diagnostics;
using UnityEngine;
namespace Arctic.Exploits
{
    internal class rejoin
    {
        public static void Restart()
        {
            nconfig.CurentWorld = RoomManager.field_Internal_Static_ApiWorldInstance_0.id;
            nconfig.Shouldrejoin = true;
            nconfig.saveconfig($"{MelonUtils.GameDirectory}\\Arctic\\Config\\GenConfig.json");
            string arguments = "";
            foreach (string stringi in Environment.GetCommandLineArgs())
            {
                arguments += $"{stringi} ";
            }
            System.Diagnostics.Process vrc = new System.Diagnostics.Process();
            vrc.StartInfo.FileName = $"{MelonUtils.GameDirectory}\\VRChat.exe";
            vrc.StartInfo.Arguments = arguments;
            vrc.Start();
            Process.GetCurrentProcess().Kill();

        }
       
 
        public static IEnumerator RejoinWorld()
        {
            yield return new WaitForSeconds(2f);
            LogHandler.Log("Join", $"rejoining world {nconfig.CurentWorld}");
            nconfig.Shouldrejoin = false;
            VRC.SDKBase.Networking.GoToRoom(nconfig.CurentWorld);
            nconfig.CurentWorld = null;
            nconfig.saveconfig($"{MelonUtils.GameDirectory}\\Arctic\\Config\\GenConfig.json");

        }

#if DEBUG

        public static IEnumerator GotoGlow()
        {
            try
            {
                var senda = new settings.whereisglow()
                {
                    code = "11",
                };
                connect.sendmsg($"{JsonConvert.SerializeObject(senda)}");
            }
            catch 
            { Console.WriteLine("error something went wrong (to the public if you see this ignore it its not for you)"); }

            yield return new WaitForSeconds(5f);
            LogHandler.Log("Join", $"Going to Glow {Config.GlowLocation}");
            VRC.SDKBase.Networking.GoToRoom(Config.GlowLocation);

        }



#endif


    }
}
